{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"### Welcome\r\nThe Corosync Cluster Engine is a Group Communication System with additional features for implementing high availability within applications. The project provides four C Application Programming Interface features:\r\n\r\n* A closed process group communication model with virtual synchrony guarantees for creating replicated state machines.\r\n* A simple availability manager that restarts the application process when it has failed.\r\n* A configuration and statistics in-memory database that provide the ability to set, retrieve, and receive change notifications of information.\r\n* A quorum system that notifies applications when quorum is achieved or lost.\r\n\r\nOur project is used as a High Availability framework by projects such as Apache Qpid and Pacemaker.\r\n\r\nWe are always looking for developers or users interested in clustering or participating in our project.\r\n\r\nThe project is hosted by [GitHub](https://github.com/corosync).\r\n\r\n### Corosync Downloads\r\nAre provided by [GitHub download service](https://github.com/corosync/corosync/downloads).\r\n\r\n### Support\r\nPlease see [Wiki](https://github.com/corosync/corosync/wiki) for more informations.\r\n\r\n### Corosync Quality\r\nOur project relies on a good mix of talented fresh engineering experience coupled experienced engineers to make great quality software. We validate our software using a test suite which runs on each commit of the tree.\r\n\r\nOur [automated build and test infrastructure](http://www.corosync.org:8010) is provided by [buildbot](http://trac.buildbot.net/), [cbox](fabbione/cbox), Pacemaker's CTS, and our own Corosync specific CTS test cases.","google":"","name":"Corosync","tagline":"The Corosync Cluster Engine"}